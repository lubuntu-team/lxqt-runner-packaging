Description: Revert KWindowSystem port
 Jammy still uses older KWindowSystem, revert back to using it.
Author: Aaron Rainbolt
Origin: vendor
Last-Update: 2023-11-13
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
diff --git a/CMakeLists.txt b/CMakeLists.txt
index f0772f1..27c1bf5 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -25,7 +25,7 @@ cmake_dependent_option(RUNNER_VBOX_HEADLESS
 )
 
 # Minimum Versions
-set(KF5_MINIMUM_VERSION "5.101.0")
+set(KF5_MINIMUM_VERSION "5.36.0")
 set(LIBMENUCACHE_MINIMUM_VERSION "1.1.0")
 set(LXQT_MINIMUM_VERSION "1.4.0")
 set(LXQT_GLOBALKEYS_MINIMUM_VERSION "1.4.0")
diff --git a/dialog.cpp b/dialog.cpp
index c0973e9..2f671a2 100644
--- a/dialog.cpp
+++ b/dialog.cpp
@@ -55,7 +55,6 @@
 #include <QScrollBar>
 
 #include <KWindowSystem/KWindowSystem>
-#include <KWindowSystem/KX11Extras>
 
 #define DEFAULT_SHORTCUT "Alt+F2"
 
@@ -201,8 +200,8 @@ void Dialog::moveEvent(QMoveEvent *event)
  ************************************************/
 void Dialog::showEvent(QShowEvent *event)
 {
-    connect(KX11Extras::self(), &KX11Extras::activeWindowChanged, this, &Dialog::onActiveWindowChanged);
-    connect(KX11Extras::self(), &KX11Extras::currentDesktopChanged, this, &Dialog::onCurrentDesktopChanged);
+    connect(KWindowSystem::self(), &KWindowSystem::activeWindowChanged, this, &Dialog::onActiveWindowChanged);
+    connect(KWindowSystem::self(), &KWindowSystem::currentDesktopChanged, this, &Dialog::onCurrentDesktopChanged);
     return QDialog::showEvent(event);
 }
 
@@ -213,8 +212,8 @@ void Dialog::showEvent(QShowEvent *event)
 void Dialog::hideEvent(QHideEvent *event)
 {
     QDialog::hideEvent(event);
-    disconnect(KX11Extras::self(), &KX11Extras::currentDesktopChanged, this, &Dialog::onCurrentDesktopChanged);
-    disconnect(KX11Extras::self(), &KX11Extras::activeWindowChanged, this, &Dialog::onActiveWindowChanged);
+    disconnect(KWindowSystem::self(), &KWindowSystem::currentDesktopChanged, this, &Dialog::onCurrentDesktopChanged);
+    disconnect(KWindowSystem::self(), &KWindowSystem::activeWindowChanged, this, &Dialog::onActiveWindowChanged);
 }
 
 
@@ -349,7 +348,7 @@ void Dialog::showHide()
 {
     // Using KWindowSystem to detect the active window since
     // QWidget::isActiveWindow is not working reliably.
-    if (isVisible() && (KX11Extras::activeWindow() == winId()))
+    if (isVisible() && (KWindowSystem::activeWindow() == winId()))
     {
         hide();
     }
@@ -357,7 +356,7 @@ void Dialog::showHide()
     {
         realign();
         show();
-        KX11Extras::forceActiveWindow(winId());
+        KWindowSystem::forceActiveWindow(winId());
         ui->commandEd->setFocus();
         ui->commandEd->selectAll();
     }
@@ -378,7 +377,7 @@ void Dialog::realign()
         screenNumber = screen ? screens.indexOf(screen) : 0;
     }
 
-    desktop = screens.at(screenNumber)->availableGeometry().intersected(KX11Extras::workArea(screenNumber));
+    desktop = screens.at(screenNumber)->availableGeometry().intersected(KWindowSystem::workArea(screenNumber));
 
     QRect rect = this->geometry();
     rect.moveCenter(desktop.center());
@@ -452,7 +451,7 @@ void Dialog::onActiveWindowChanged(WId id)
         if (mDesktopChanged)
         {
             mDesktopChanged = false;
-            KX11Extras::forceActiveWindow(winId());
+            KWindowSystem::forceActiveWindow(winId());
         } else
         {
             hide();
@@ -468,8 +467,8 @@ void Dialog::onCurrentDesktopChanged(int screen)
 {
     if (isVisible())
     {
-        KX11Extras::setOnDesktop(winId(), screen);
-        KX11Extras::forceActiveWindow(winId());
+        KWindowSystem::setOnDesktop(winId(), screen);
+        KWindowSystem::forceActiveWindow(winId());
         //Note: workaround for changing desktop while runner is shown
         // The KWindowSystem::forceActiveWindow may fail to correctly activate runner if there
         // are any other windows on the new desktop (probably because of the sequence while WM
